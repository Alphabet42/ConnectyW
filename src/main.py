import os
import ConnectyException
import discord
from discord import app_commands
from discord.ext import tasks
import asyncio
import dotenv
import Manager
import EventHandler as EH
import Utilities as ult
import FileManager as FM

dotenv.load_dotenv()
TOKEN = os.getenv("TOKEN")
OWNER_ID = int(os.getenv("OWNER_ID"))
intent = discord.Intents.all()
client = discord.Client(intents=intent)
Manager.Manager.client = client
tree = app_commands.CommandTree(client)

# Shelly Best SHelly

"""
-----------------------------------------------------------------------------------------------------------------EVENTS-
"""

@client.event
async def on_ready():
    await tree.sync()
    await Manager.load_manager()
    save_data.start()
    print_data.start()
    Manager.Manager.is_loaded = True
    FM.folder_check()
    print("Ready")

@client.event
async def on_message(message: discord.Message):
    network = Manager.get_network_by_id(message.channel.id)
    if network is not None:
        if message.reference is not None:
            await EH.handle_reply_message(message, network)
        else:
            await EH.handle_regular_message(message, network)

@client.event
async def on_message_edit(previous_message: discord.Message, new_message: discord.Message):
    network = Manager.get_network_by_id(new_message.channel.id)
    await EH.handle_message_edit(previous_message, new_message, network)

@client.event
async def on_raw_message_edit(raw_message_update_event: discord.RawMessageUpdateEvent):
    network = Manager.get_network_by_id(raw_message_update_event.channel_id)
    await EH.handle_raw_message_edit(raw_message_update_event, network)

@client.event
async def on_message_delete(message: discord.Message):
    network = Manager.get_network_by_id(message.channel.id)
    await EH.handle_message_delete(message, network)

@client.event
async def on_raw_message_delete(raw_message_delete_event: discord.RawMessageDeleteEvent):
    network = Manager.get_network_by_id(raw_message_delete_event.channel_id)
    await EH.handle_raw_message_delete(raw_message_delete_event, network)

"""
---------------------------------------------------------------------------------------------------------------COMMANDS-
"""
@tree.command(name="instantiate")
async def instantiate(interaction: discord.Interaction, network_name: str):
    if interaction.user.id == OWNER_ID:
        Manager.add_network(network_name)
        await ult.send_response(interaction, "Successfully Instantiated")
    else:
        await ult.send_response(interaction, "Denied")

@tree.command(name="annex")
async def annex(interaction: discord.Interaction, network_name: str, level: int):
    if interaction.user.id == OWNER_ID:
        try:
            network = Manager.get_network_by_name(network_name)
            await network.annex(interaction, level)
            await ult.send_response(interaction, "Successfully Annexed")
        except ConnectyException.UnknownIdentification as e:
            await ult.send_response(interaction, str(e))
    else:
        await ult.send_response(interaction, "Denied")

@tree.command(name="nannex")
async def nannex(interaction: discord.Interaction):
    if interaction.user.id == OWNER_ID:
        try:
            network = Manager.get_network_by_id(interaction.channel_id)
            await network.nannex(interaction)
            await ult.send_response(interaction, "Successfully Nannexed")
        except ConnectyException.UnknownIdentification as e:
            await ult.send_response(interaction, str(e))
    else:
        await ult.send_response(interaction, "Denied")

""" NOT TO BE USED UNTIL FIXED
@tree.command(name="sync") 
async def sync(interaction: discord.Interaction, channel_id: str):
    if interaction.user.id == OWNER_ID:
        if channel_id.isdigit():
            try:
                network = Manager.get_network_by_id(interaction.channel_id)
                await network.sync(interaction, int(channel_id))
                await ult.send_response(interaction, "Successfully Synced")
            except ConnectyException.UnknownIdentification as e:
                await ult.send_response(interaction, str(e))
    else:
        await ult.send_response(interaction, "Denied")
"""

@tree.command(name="erase")
async def erase(interaction: discord.Interaction):
    if interaction.user.id == OWNER_ID:
        try:
            network = Manager.raw_get_network_by_id(interaction.channel_id)
            await network.erase(interaction)
            await ult.send_response(interaction, "Successfully Cleaned")
        except ConnectyException.ConnectionIsActive as e:
            await ult.send_response(interaction, str(e))
        except ConnectyException.UnknownIdentification as e:
            await ult.send_response(interaction, str(e))
    else:
        await ult.send_response(interaction, "Denied")

@tree.command(name="destroy")
async def destroy(interaction: discord.Interaction, network_name: str):
    if interaction.user.id == OWNER_ID:
        try:
            Manager.remove_network(network_name)
            await ult.send_response(interaction, "Successfully Wiped '{0}'".format(network_name))
        except ConnectyException.UnknownIdentification as e:
            await ult.send_response(interaction, str(e))
    else:
        await ult.send_response(interaction, "Denied")

@tree.command(name="printb")
async def printb(interaction: discord.Interaction):
    if interaction.guild is None:
        await ult.send_response(interaction, "Only In Servers")
    else:
        if interaction.user.guild_permissions.administrator:
            await Manager.printb(interaction)
            await ult.send_response(interaction, "Done")
        else:
            await ult.send_response(interaction, "Not Admin")

@tree.command(name="printd")
async def printd(interaction: discord.Interaction):
    if interaction.guild is None:
        await ult.send_response(interaction, "Only In Servers")
    else:
        if interaction.user.guild_permissions.administrator:
            await Manager.printd(interaction)
            await ult.send_response(interaction, "Done")
        else:
            await ult.send_response(interaction, "Not Admin")

@tree.command(name="delete")
async def delete(interaction: discord.Interaction, message_id: str):
    if interaction.guild is None:
        await ult.send_response(interaction, "Only In Servers")
    else:
        if interaction.user.guild_permissions.administrator:
            if message_id.isdigit():
                try:
                    network = Manager.get_network_by_id(interaction.channel_id)
                    await network.delete(interaction, int(message_id))
                    await ult.send_response(interaction, "Successfully Deleted")
                except ConnectyException.UnknownIdentification as e:
                    await ult.send_response(interaction, str(e))
                except ConnectyException.ConnectyActionFailed as e:
                    await ult.send_response(interaction, str(e))
            else:
                await ult.send_response(interaction, "Not a number")
        else:
            await ult.send_response(interaction, "You're Not Admin")

@tree.command(name="ban")
async def ban(interaction: discord.Interaction, message_id: str):
    if interaction.guild is None:
        await ult.send_response(interaction, "Only In Servers")
    else:
        if interaction.user.guild_permissions.administrator:
            if message_id.isdigit():
                try:
                    await Manager.ban(interaction, int(message_id))
                    await ult.send_response(interaction, "Successfully Banned")
                except ConnectyException.UnknownIdentification as e:
                    await ult.send_response(interaction, str(e))
                except ConnectyException.ConnectyActionFailed as e:
                    await ult.send_response(interaction, str(e))
                except ConnectyException.ConnectyAlreadyDone as e:
                    await ult.send_response(interaction, str(e))
            else:
                await ult.send_response(interaction, "Not a number")
        else:
            await ult.send_response(interaction, "You're Not Admin")


@tree.command(name="unban")
async def unban(interaction: discord.Interaction, ban_code: str):
    if interaction.guild is None:
        await ult.send_response(interaction, "Only In Servers")
    else:
        if interaction.user.guild_permissions.administrator:
            if ban_code.isdigit():
                try:
                    Manager.unban(interaction, int(ban_code))
                    await ult.send_response(interaction, "Successfully Unbanned")
                except ConnectyException.UnknownIdentification as e:
                    await ult.send_response(interaction, str(e))
                except ConnectyException.ConnectyActionFailed as e:
                    await ult.send_response(interaction, str(e))
            else:
                await ult.send_response(interaction, "Not a number")
        else:
            await ult.send_response(interaction, "You're Not Admin")

@tree.command(name="shutdown")
async def shutdown(interaction: discord.Interaction):
    if interaction.user.id == OWNER_ID:
        await ult.send_response(interaction, "Shutting Down...")
        await client.close()
    else:
        await ult.send_response(interaction, "Denied")

"""
------------------------------------------------------------------------------------------------------------------TASKS-
"""
@tasks.loop(seconds=30)
async def save_data():
    if Manager.Manager.is_loaded:
        Manager.save_manager()

@tasks.loop(hours=6)
async def print_data():
    print(Manager.create_dict())
    for network in Manager.Manager.networks:
        print(network.create_network_dict())
"""
-------------------------------------------------------------------------------------------------------------------MAIN-
"""

async def main():
    # When in doubt, just throw it out
    try:
        await client.start(TOKEN)
    except Exception:
        await client.close()

    FM.folder_check()
    if FM.file_exists(FM.FOLDER.DATA, FM.FILE.MANAGER):
        if Manager.Manager.is_loaded:
            Manager.save_manager()

if __name__ == "__main__":
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy()) # Linux requires something else
    asyncio.run(main())
    print("Finished Program")















"""
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@.    @@@ :- * # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@#@ @ --@ .  @ @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%################%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%######################%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%############################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%######################################%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#########################################%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@######################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#######################################################@@@@@@@@@@@@@@@@@@@@%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%#######%%%%%@@@@@@@@@@@%########################################################@@@@@@@@@@%%######################%@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%############################%%@@######@@#############%%############%%######%%%%@@@@#######%@@%%################################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%########################################@@@@@@@@@@@########################@@@@@@@@@@@@#############################################@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#########################################@@@@@@@@@@@@@@####################@@@@@@@@@@@@@@@#############################################@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%########################################@@@@@@@@@@@@@@@@@@################@@@@@@@@@@@@@@@@@@#@@@@@@@%####################################@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##############@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###############################%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%#########################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###############@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@#######################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##########################@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@##############@@@%###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@##################@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@############@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@######################@@@@@@@@@@@@@@@@@@@@-:=@@@@@@@@@@@@@@@@@@@@@@###############@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@##########-@@@@@@@@@@@@@@@@@@@@:::-**====-.@@@@@@@@@@@@@@########+*#@@@@@**+####-=+@@@@@@@@@@@@%%@+++++++...@@@@@@@@@@@@@@@@@@##############@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%########%@@@@@@@@@@@@@@@@@-::%%%            -@@@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@%***+*%@    .++:..@@@@@@@@@@@@@@@@############@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%#######=@@@@@@@@@@@@@@@@::%%#@                -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+******         +++::@@@@@@@@@@@@@@@###########@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@######=@@@@@@@@@@@@@@@@:*%#@%                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+*****-            *+::+@@@@@@@@@@@@@@#########%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@######%@@@@@@@@@@@@@::%#@@                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*+***                *#::@@@@@@@@@@@%%########@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#######+=@@@@@@@@@::%#@                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****.                  #@::@@@@@@@@%%%%%######@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#######@@@@@@@@@-:%#@                         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+*=                     @@:@@@@@@@@@%%%%%####@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%######@@@@@@@@@:%#                           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*                       @@:.@@@@@@@@%%%%####%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#####@@@@@@@@@:%                          --@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                     *  %%.%@@@@@@@@######@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%###@@@@@@@@@::#                         -=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                    :   @%..@@@@@@@@%###@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@+-#                       --+*@@@@@@@@@@@@@################@@@@@@@@@@@@@@                 *   %@@%@.@@@@@@@@%##%@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@.*                     :-++*@@@@@@@@@@@@@@###############@@@@@@@@@@@@@@@@               :   **@@@.@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@.*                    --+**@@@@@@@@@@@@@@@@###############@@@@@@@@@@@@@@@@            *.  =**%@##.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.*                 --+**@@@@@@@@@@@@@@@@@@@@@#########@@@@@@@@@@@@@@@@@@@@:         -   ****@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:=               -=**@@@@@@@@@@@@@@@@@@@@@@@@@####@@@@@@@@@@@@@@@@@@@@@@@@@      *:  .*****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:            --+*@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  -   ******@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@.       :-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ****+@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@@@@@@@@@@%#########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#######%@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@------@@@@@@#############@@@@@@@----@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#::--------@@=---@#######*---@@@----------@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#######@@@@@@@@@@@@@@@@@@@+++****#@@@@@@@@:::::::::::---------------------------:::::.::::@@@@@@@@@**+++@@@@@@@@@@@@@@@@@@@##########@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#########@@@@@@@@@@@@@@@@@@##+=++****::::::::::::::::......:--------------:...:::::......::::::::::-:::::#@@@@@@@@@@@@@@@@@############@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@############@@@@@@@@@@@@@@@@#####::::::::::::%%%::::............:...--:..........:............:::::::::::::%#@@@@@@@@@@@@@@###############@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@################@@@@@@@@@@@@#####::::::::::::%#######%................................:*%%%%%###...::::::::::##@@@@@@@@@@@@#################@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@##################%:%@@@@@@@#####%::..........############%.......................###############%............###@@@@@@-::::@#################@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@##################@...:%#:@@######:.............%#############....................%###############%............####@####:::::@##################%@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@###################......##########..........:@@     %#########.....................###########%%%@@..@@........%#######::::::%###################@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@###################.......########+......@@@@            -%###-......................               @@@@........%######::@....@###################@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@####################-....@.%#######........@@           @@@   .......................   @@@           @@.........%#####%.@.....#####################@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@####################@.....:########......@.@           @@@@@   ......................  @@@@@           @.@.......#######%.....@#####################%@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@#####################@....#########%.....:.@           @@@@@   .....................   @@@@@#          @.:......%########%...%######################@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@######################@..%##########-......@           @@@@@   .....................   @@@@@@          @.......=##########:@########################@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%#######################%.############.......           @@@@@   .....................   @@@@@           :......:#####################################%@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@########################%############=......           @@@@@   .........::::.........   @@@@           ......:%############%########################@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@#####################################.......:....       @ ........::::::::::::..........@        ....:.....::#####################################@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@%####################%##############.......:::::::::::::::::::::::::*******:::::::::::::::::::::::::.....::%##############%####################@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@#################################%........::::::::::::::::::.......**+....:::::::::::::::::::::......:::##################################@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###############################.........::::::::..................................:::::::::......:  .################%###############%@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##########################:...........................................................         %################%##########@%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#%################%........................................................            ##################%@@%@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%################%........................................................            ##################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#################.....................................::.................            ##################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#################..............................:-@@@@@@@@@@..............            ##################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#################..........................-@@@@@@@@@#####@-.............       :::::#################%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#################.........................:@#######%##+-....................:::::::::#################%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#################:.........................................................::::::::#@#################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@################%@@#......................................................::::::#@@@@%################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%###############@@@@@@#..................................................::::#@@@@@@@@###############@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###############@@@@@@@@@#:.............................................::#@@@@@@@@@@@%#############%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#############%@@@@@@@@@@@@@#........................................*@@@@@@@@@@@@@@@@#############@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%############@@@@@@@@@@@@@@@@@@#:...............................*%@@@@@@@@@@@@@@@@@@@@###########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%##########@@@@@@@@@@@@@@@@@@@@@@@@#:.....................:#@@@@@@@@@@@@@@@@@@@@@@@@@%#########%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%########@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##=.......=##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#######%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#####%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@1984

"""


